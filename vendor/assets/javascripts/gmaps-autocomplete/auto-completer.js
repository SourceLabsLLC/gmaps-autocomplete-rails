// Generated by LiveScript 1.2.0
(function(){
  var AutoCompleter;
  module.exports = AutoCompleter = (function(){
    AutoCompleter.displayName = 'AutoCompleter';
    var prototype = AutoCompleter.prototype, constructor = AutoCompleter;
    function AutoCompleter(options){
      this.options = options != null
        ? options
        : {};
      this.region = options.region;
      this.country = options.country;
      this.options.autoComplete = import$(this.defaults, this.options.autoComplete);
    }
    prototype.defaults = {
      select: function(event, ui){
        self.updateUI(ui.item.value, ui.item.geocode.geometry.location);
        return self.updateMap(ui.item.geocode.geometry);
      },
      source: function(request, response){
        var region_postfix, region, address, geocodeOpts;
        region_postfix = '';
        region = self.region;
        if (region) {
          region_postfix = ', ' + region;
        }
        address = request.term + region_postfix;
        self.debug('geocode address', address);
        geocodeOpts = {
          'address': address
        };
        return self.geocoder.geocode(geocodeOpts, function(results, status){
          return response($.map(results, function(item){
            var uiAddress;
            uiAddress = item.formatted_address.replace(", " + self.country, '');
            return {
              label: uiAddress,
              value: uiAddress,
              geocode: item
            };
          }));
        });
      }
    };
    return AutoCompleter;
  }());
  function import$(obj, src){
    var own = {}.hasOwnProperty;
    for (var key in src) if (own.call(src, key)) obj[key] = src[key];
    return obj;
  }
}).call(this);
